#if: false
name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Set up Python environment
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools wheel
        
    - name: Install spaCy
      run: |
        python -m pip install spacy
        python -m spacy download en_core_web_sm
        
    - name: Install remaining dependencies
      run: |
        pip install -r requirements.txt
        
    - name: Fix import paths
      run: |
        # Create directories if they don't exist
        mkdir -p fetcher scheduler
        
        # Create __init__.py files to make directories importable
        touch fetcher/__init__.py
        touch scheduler/__init__.py
        
    - name: Install in development mode
      run: |
        pip install -e .
        
    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Run tests
      run: |
        pip install pytest
        PYTHONPATH=. pytest tests/ -v
        
    - name: Check spaCy model
      run: |
        python -m spacy download en_core_web_sm
        python -c "import spacy; nlp = spacy.load('en_core_web_sm'); print('spaCy model loaded successfully')"
        
    - name: Test with pytest
      run: |
        pip install pytest pytest-cov
        PYTHONPATH=. pytest tests/ --cov=./ --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Bandit security linter
      run: |
        pip install bandit
        bandit -r . -c pyproject.toml
        
    - name: Run Safety check
      run: |
        pip install safety
        safety check 